pipeline {
    
    agent any

    tools {
        terraform "Terraform1.1.7"
    }

    parameters {
        string(name: "AWS_REGION", defaultValue: "us-west-1", trim: true, description: "Parameter for AWS region.")
        booleanParam(name: "DESTROY", defaultValue: "false", description: "Parameter to determine whether to destroy terraform infrastructure or not.")
    }

    environment {
        AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID')
        AWS_ACCESS_KEY = credentials('AWS_ACCESS_KEY')
        AWS_SECRET_KEY = credentials('AWS_SECRET_KEY')
    }

    stages {

        stage("Initialize") {

            steps{

                withCredentials([file(credentialsId: 'TFVars', variable: 'TFVARS')]){
                    sh "ls"
                    sh "cp \$TFVARS terraform/EKS/terraform.tfvars"
                }

                sh "terraform init"

            }

        }

        stage("Plan") {

            when { expression { !params.DESTROY} }

            steps{
                sh 'terraform init && terraform plan -out=terrplan'
            }


        }

        stage("Apply") {

            when { expression { !params.DESTROY} }

            steps{
                sh 'terraform apply -auto-approve "terrplan" > "apply_result.txt"'
            }

        }

        stage("Destroy"){

            when { expression { params.DESTROY} }

            steps {
                sh 'terraform destroy -auto-approve'
            }
        }


    }

    post {

        cleanup {
            sh "rm terraform/EKS/terraform.tfvars"
        }


    }

}